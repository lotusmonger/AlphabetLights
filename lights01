#include <Adafruit_NeoPixel.h>

#define PIN (2)
#define PIN_SWITCH (A3)

// TOP ROW:
#define A_LED (25)
#define B_LED (24)
#define C_LED (23)
#define D_LED (22)
#define E_LED (21)
#define F_LED (20)
#define G_LED (19)
#define H_LED (18)

// MIDDLE ROW:
#define I_LED (9)
#define J_LED (10)
#define K_LED (11)
#define L_LED (12)
#define M_LED (13)
#define N_LED (14)
#define O_LED (15)
#define P_LED (16)
#define Q_LED (17)

// BOTTOM ROW:
#define R_LED (8)
#define S_LED (7)
#define T_LED (6)
#define U_LED (5)
#define V_LED (4)
#define W_LED (3)
#define X_LED (2)
#define Y_LED (1)
#define Z_LED (0)

// EXTRA
#define SPACE (30)
#define EOL (40)

#define MAX_PHRASE_LEN (16)
#define NUM_PHRASES (4)

uint8_t phrase1[] = { H_LED, A_LED, P_LED, P_LED, Y_LED, SPACE, H_LED, A_LED, L_LED, L_LED, O_LED, W_LED, E_LED, E_LED, N_LED, EOL };
uint8_t phrase2[] = { T_LED, R_LED, I_LED, C_LED, K_LED, SPACE, O_LED, R_LED, SPACE, T_LED, R_LED, E_LED, A_LED, T_LED, EOL };
uint8_t phrase3[] = { R_LED, I_LED, G_LED, H_LED, T_LED, SPACE, H_LED, E_LED, R_LED, E_LED, EOL };
uint8_t phrase4[] = { R_LED, U_LED, N_LED, EOL };

uint8_t* phrases[] = {phrase1, phrase2, phrase3, phrase4};
uint8_t phrase_index = 0;
uint8_t* current_phrase = phrase1; 

Adafruit_NeoPixel strip = Adafruit_NeoPixel(26, PIN, NEO_GRB + NEO_KHZ800);
    
void setup() {
  Serial.begin(9600);
  Serial.print("Stranger Things Wall starting...\n");
  
  pinMode(PIN_SWITCH, INPUT_PULLUP);
  
  randomSeed(analogRead(0));
  strip.begin();
  strip.setBrightness(255);
  strip.show(); // Initialize all pixels to 'off'
}

void loop() {
  int i = 0;
  for (i = 0; i < MAX_PHRASE_LEN && current_phrase[i] != EOL; i++)
  {
    // Turn off previous
    if (i > 0)
      strip.setPixelColor(current_phrase[i-1], 0);
    strip.show();
    delay(200);

    Serial.print(digitalRead(PIN_SWITCH));
    
    if (current_phrase[i] != SPACE)
    {
      strip.setPixelColor(current_phrase[i], getColor(current_phrase[i]));
      strip.show();
    }
    delay(1000);
  }
  // Turn off the last letter
  if (i > 0)
    strip.setPixelColor(current_phrase[i-1], 0);
  strip.show();

  checkForSwitch(3000);
}

void checkForSwitch(uint32_t timeToWait) {
  int buttonStart = digitalRead(PIN_SWITCH);
  delay(timeToWait);
  int buttonEnd = digitalRead(PIN_SWITCH);
  if ( buttonStart == LOW && buttonEnd == LOW)
  {
    // Switch phrases
    Serial.print("Phrase Switch!\n");
    phrase_index = (phrase_index + 1) % NUM_PHRASES;
    current_phrase = phrases[phrase_index];
  }
  else {
    Serial.print("Phrase stays the same!\n");
  }
}

uint32_t getColor(uint8_t letter) {
  switch (letter) {
    // WHITE
    case A_LED:
    case E_LED:
    case L_LED:
    case P_LED:
    case S_LED:
      return strip.Color(255, 255, 255);
    // BLUE
    case B_LED:
    case K_LED:
    case R_LED:
    case U_LED:
    case W_LED:
      return strip.Color(0,0,255);
    // RED
    case C_LED:
    case G_LED:
    case J_LED:
    case N_LED:
    case Q_LED:
    case V_LED:
    case Y_LED:
      return strip.Color(255, 0, 0);
    // GREEN
    case D_LED:
    case H_LED:
    case I_LED:
      return strip.Color(0, 255, 0);
    // YELLOW
    case F_LED:
    case M_LED:
    case T_LED:
    case X_LED:
      return strip.Color(255,255,0);
    // VIOLET:
    case O_LED:
    case Z_LED:
    default:
      return strip.Color(255,0,255);
  }
}
